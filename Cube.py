import random

def generate_cube():
    # the top face is white
    ''' 
    Arrays are generated by the colors of the cubies
    with the whit face on top and red in the front.
    The color arrangement is the standard opposite faces
    red-orange, white-yellow, green-blue
    '''
    white = ['W', 'W', 'W', 'W', 'W', 'W', 'W', 'W']
    red = ['R', 'R', 'R', 'R', 'R', 'R', 'R', 'R']
    green = ['G', 'G', 'G', 'G', 'G', 'G', 'G', 'G']
    blue = ['B', 'B', 'B', 'B', 'B', 'B', 'B', 'B']
    yellow = ['Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y']
    orange = ['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']

    '''DEBUGGING PURPOSES'''
    # white = [1, 2, 3, 4, 5, 6, 7, 8]
    # red = [1, 2, 3, 4, 5, 6, 7, 8]
    # green = [1, 2, 3, 4, 5, 6, 7, 8]
    # blue = [1, 2, 3, 4, 5, 6, 7, 8]
    # yellow = [1, 2, 3, 4, 5, 6, 7, 8]
    # orange = [1, 2, 3, 4, 5, 6, 7, 8]

    cube = object_cube(white, red, green, blue, yellow, orange)
    return cube

def is_solved(cube):
    (white, red, green, blue, yellow, orange) = ungroup_cube(cube)
    for i in range(0, 6):
        if (i == 0):
            arr = white
            value = 'W'
        if (i == 1):
            arr = red
            value = 'R'
        if (i == 2):
            arr = green
            value = 'G'
        if (i == 3):
            arr = blue
            value = 'B'
        if (i == 4):
            arr = yellow
            value = 'Y'
        if (i == 5):
            arr = orange
            value = 'O'
        for j in range(0, 8):
            if (arr[j] != value):
                return False
    return True

def print_cube(cube):
    (white, red, green, blue, yellow, orange) = ungroup_cube(cube)
    arr = []
    for i in range(0, 6):
        if (i == 0):
            arr = white.copy()
            array_name = "white_face"
        elif (i == 1):
            arr = red.copy()
            array_name = "red_face"
        elif (i == 2):
            arr = green.copy()
            array_name = "green_face"
        elif (i == 3):
            arr = orange.copy()
            array_name = "orange_face"
        elif (i == 4):
            arr = blue.copy()
            array_name = "blue_face"
        else:
            arr = yellow.copy()
            array_name = "yellow_face"
        print(f"{array_name}: {arr[0]}, {arr[1]}, {arr[2]}, {arr[3]}, {arr[4]}, {arr[5]}, {arr[6]}, {arr[7]}")

def rotate(face):
    return [face[6], face[7], face[0], face[1], face[2], face[3], face[4], face[5]]

def up(white, red, green, blue, yellow, orange):
    placeholder = [blue[0], blue[1], blue[2]]
    # replace orange to blue
    blue[0] = orange[0]
    blue[1] = orange[1]
    blue[2] = orange[2]
    # replace green to orange
    orange[0] = green[0]
    orange[1] = green[1]
    orange[2] = green[2]
    # replace red to green
    green[0] = red[0]
    green[1] = red[1]
    green[2] = red[2]
    # replace blue to red
    red[0] = placeholder[0]
    red[1] = placeholder[1]
    red[2] = placeholder[2]
    #rotate white
    white = rotate(white)
    return white, red, green, blue, yellow, orange

def right(white, red, green, blue, yellow, orange):
    placeholder = [yellow[2], yellow[3], yellow[4]]
    # replace orange to yellow
    yellow[2] = orange[6]
    yellow[3] = orange[7]
    yellow[4] = orange[0]
    # replace white to orange
    orange[6] = white[2]
    orange[7] = white[3]
    orange[0] = white[4]
    # replace red to white
    white[2] = red[2]
    white[3] = red[3]
    white[4] = red[4]
    # replace yellow to red
    red[2] = placeholder[0]
    red[3] = placeholder[1]
    red[4] = placeholder[2]
    #rotate blue
    blue = rotate(blue)
    return white, red, green, blue, yellow, orange

def left(white, red, green, blue, yellow, orange):
    placeholder = [white[0], white[6], white[7]]
    # replace orange to white
    white[0] = orange[4]
    white[7] = orange[3]
    white[6] = orange[2]
    # replace yellow to orange
    orange[2] = yellow[6]
    orange[3] = yellow[7]
    orange[4] = yellow[0]
    # replace red to yellow
    yellow[0] = red[0]
    yellow[7] = red[7]
    yellow[6] = red[6]
    # replace white to red
    red[0] = placeholder[0]
    red[6] = placeholder[1]
    red[7] = placeholder[2]
    #rotate green
    green = rotate(green)
    return white, red, green, blue, yellow, orange

def back(white, red, green, blue, yellow, orange):
    placeholder = [white[0], white[1], white[2]]
    # replace blue to white
    white[0] = blue[2]
    white[1] = blue[3]
    white[2] = blue[4]
    # replace yellow to blue
    blue[2] = yellow[4]
    blue[3] = yellow[5]
    blue[4] = yellow[6]
    # replace green to yellow
    yellow[4] = green[6]
    yellow[5] = green[7]
    yellow[6] = green[0]
    # replace white to green
    green[6] = placeholder[0]
    green[7] = placeholder[1]
    green[0] = placeholder[2]
    #rotate orange
    orange = rotate(orange)
    return white, red, green, blue, yellow, orange

def down(white, red, green, blue, yellow, orange):
    placeholder = [green[4], green[5], green[6]]
    # replace orange to green
    green[4] = orange[4]
    green[5] = orange[5]
    green[6] = orange[6]
    # replace blue to orange
    orange[4] = blue[4]
    orange[5] = blue[5]
    orange[6] = blue[6]
    # replace red to blue
    blue[4] = red[4]
    blue[5] = red[5]
    blue[6] = red[6]
    # replace green to red
    red[4] = placeholder[0]
    red[5] = placeholder[1]
    red[6] = placeholder[2]
    #rotate yellow
    yellow = rotate(yellow)
    return white, red, green, blue, yellow, orange

def front(white, red, green, blue, yellow, orange):
    placeholder = [white[4], white[5], white[6]]
    # replace green to white
    white[4] = green[2]
    white[5] = green[3]
    white[6] = green[4]
    # replace yellow to green
    green[2] = yellow[0]
    green[3] = yellow[1]
    green[4] = yellow[2]
    # replace blue to yellow
    yellow[0] = blue[6]
    yellow[1] = blue[7]
    yellow[2] = blue[0]
    # replace white to blue
    blue[6] = placeholder[0]
    blue[7] = placeholder[1]
    blue[0] = placeholder[2]
    #rotate red
    red = rotate(red)
    return white, red, green, blue, yellow, orange

def move(cube, move_num):
    (white, red, green, blue, yellow, orange) = ungroup_cube(cube)
    if (move_num == 1):
        # print("up")
        (white, red, green, blue, yellow, orange) = up(white, red, green, blue, yellow, orange)
    elif (move_num == 2):
        # print("right")
        (white, red, green, blue, yellow, orange) = right(white, red, green, blue, yellow, orange)
    elif (move_num == 3):
        # print("left")
        (white, red, green, blue, yellow, orange) = left(white, red, green, blue, yellow, orange)
    elif (move_num == 4):
        # print("back")
        (white, red, green, blue, yellow, orange) = back(white, red, green, blue, yellow, orange)
    elif (move_num == 5):
        # print("down")
        (white, red, green, blue, yellow, orange) = down(white, red, green, blue, yellow, orange)
    elif (move_num == 6):
        # print("front")
        (white, red, green, blue, yellow, orange) = front(white, red, green, blue, yellow, orange)
    return object_cube(white, red, green, blue, yellow, orange)

def randomize_cube(cube):
    for i in range (0, 30):
        random_int = random.randint(1, 6)
        cube = move(cube, random_int)
    return cube

def object_cube(white, red, green, blue, yellow, orange):
    cube = [white, red, green, blue, yellow, orange]
    return cube

def ungroup_cube(cube):
    white = cube[0]
    red = cube[1]
    green = cube[2]
    blue = cube[3]
    yellow = cube[4]
    orange = cube[5]
    return white, red, green, blue, yellow, orange
